{"version":3,"sources":["static/images/legend.png","static/images/sunMarvel.svg","static/images/sunDc.svg","static/images/sunDefault.svg","components/star/Sun.js","dataset/Character.js","components/galaxy/Body.js","components/star/Star.js","components/orbit/Orbit.js","components/link/Link.js","components/link/Links.js","components/galaxy/Galaxy.js","components/SearchBox.js","components/universe/Universe.js","components/ResponsiveWrapper.js","components/barchart/Axis/Axis.js","components/barchart/Axis/Axes.js","components/barchart/Bars/Bars.js","components/barchart/BarChart/BarChart.js","components/barchart/ResponsiveWrapper.js","dataset/LoadDataset.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Sun","props","galaxyName","react_default","a","createElement","className","width","height","xlinkHref","require","defaultProps","Character","id","name","arguments","length","undefined","gender","birthDate","abilities","partners","children","presentInWorks","occupations","Object","classCallCheck","this","_abilities","_partners","_children","_presentInWorks","_occupations","date","ability","push","occupation","work","child","partner","v","split","names","toUpperCase","Body","data","threshold","_threshold","bodyType","computeBodyType","x","y","radius","DUST","PLANET","STAR","size","Star","_this","possibleConstructorReturn","getPrototypeOf","call","state","selected","handleClick","bind","assertThisInitialized","d","body","concat","url","join","strokeWidth","r","stroke","fill","_genderClass","_selectedClass","cx","cy","style","_bodyStyle","_renderBody","t","Math","PI","cos","sin","visibility","styles","d3Select","key","select","attr","_this2","forEach","_showLabel","console","log","setState","_this$props$body","transform","data-tip","_tooltipHtml","data-for","comic","data-html","onClick","_expandSelectionArea","_renderCircle","_renderLabel","_highlightNeighbors","PureComponent","visible","Orbit","bodies","sort","b","initials","filter","isDust","map","i","components_star_Star","_this3","_this$props","rx","ry","_renderEllipse","_renderLargeBodies","_renderDust","Component","Link","type","source","target","vis","x1","y1","x2","y2","Links","_Link","find","showChildren","showPartners","Link_Link","_childrenLinks","_partnersLinks","_renderLinks","Galaxy","Error","orbits","_createBodies","important","reduce","_averageWorksN","char","_computeOrbitsBodies","_loop","_loop2","random","randomR","start","allBodies","maxWorks","d3max","scaleLinear","domain","range","dt","randomSign","orbit","orbitBodies","levels","max","min","dust","_setUpOrbitBodies","largeBodies","_this4","components_orbit_Orbit","assign","components_link_Links","star_Sun","_renderOrbits","ReactDOM","createPortal","dist_default","effect","delayHide","delayShow","delayUpdate","border","html","document","getElementById","_renderGalaxy","SearchBox","handleChange","e","d3SelectAll","value","toLowerCase","includes","text","onChange","placeholder","Tooltips","ChartComponent","Universe","_setShowChildren","_setShowPartners","Viewer","marvelCharacters","marvelData","dcCharacters","dcData","closeMiniature","fitToViewer","build_es","detectAutoPan","ref","background","SVGBackground","toolbarProps","SVGAlignX","SVGAlignY","galaxy_Galaxy","src_components_SearchBox","test","navigator","userAgent","alert","textAlign","class","href","data-show-count","aria-label","data-href","data-layout","data-size","rel","ResponsiveWrapper","_Component","ResponsiveChart","containerWidth","containerHeight","fitParentContainer","inherits","createClass","window","addEventListener","removeEventListener","_this$state","chartContainer","parentNode","currentContainerWidth","getBoundingClientRect","currentContainerHeight","parentWidth","_this$state2","shouldRenderChart","el","renderChart","Axis","renderAxis","axisType","orient","axis","d3Axis","scale","tickSize","tickPadding","ticks","axisElement","translate","Axes","_ref","minSize","scales","margins","svgDimensions","yProps","dataModel","yScale","left","right","barchart_Axis_Axis","Bars","xScale","bars","classFunc","bandFunc","valueFunc","bandwidth","total","getTooltipHtml","BarChart","scaleBand","maxValue","apply","toConsumableArray","padding","bottom","top","title","barchart_Bars_Bars","parsPadding","LoadDataset","json","characters","loadCharacters","model","label","cssClass","count","countMale","countNonMale","countAb","counter","incrementCount","abilityData","occupationData","App","author","authorUrl","percentageMale","n","parseInt","countGender","countTotalGender","components_universe_Universe","color","opacity","backgroundColor","alt","src","legend","async","charset","barchart_BarChart_BarChart","abilitiesDataModel","occupationsDataModel","render","src_App_0"],"mappings":"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","file":"static/js/main.8fe5c31d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/legend.02c3897c.png\";","module.exports = __webpack_public_path__ + \"static/media/sunMarvel.4283419d.svg\";","module.exports = __webpack_public_path__ + \"static/media/sunDc.3eda8d5a.svg\";","module.exports = __webpack_public_path__ + \"static/media/sunDefault.aab39a19.svg\";","import React from 'react'\r\nimport './Star.css'\r\n\r\nfunction Sun(props){    \r\n    if (props.galaxyName === 'marvel'){\r\n        return <image className='Sun' width={props.width} height={props.height} xlinkHref={require('../../static/images/sunMarvel.svg')} />\r\n    }\r\n    if (props.galaxyName === 'dc'){\r\n        return <image className='Sun' width={props.width} height={props.height} xlinkHref={require('../../static/images/sunDc.svg')} />\r\n    }\r\n    return <image className='Sun' width={props.width} height={props.height} xlinkHref={require('../../static/images/sunDefault.svg')} />\r\n}\r\n\r\nSun.defaultProps = {\r\n    galaxyName: 'default',\r\n    width: 60,\r\n    height: 60\r\n}\r\n\r\nexport default Sun\r\n","\r\nclass Character{\r\n\r\n    constructor(id, name=undefined, gender=undefined, birthDate=undefined, abilities=[], partners=[], children=[], presentInWorks=[], occupations=[]){\r\n        this.id = id\r\n        this.name = name\r\n        this.gender = gender\r\n        this.birthDate = birthDate\r\n\r\n        this._abilities = abilities\r\n        this._partners = partners\r\n        this._children = children\r\n        this._presentInWorks = presentInWorks\r\n        this._occupations = occupations\r\n    }\r\n\r\n    get key(){\r\n        let v = this.id.split('/')\r\n        return v[v.length-1]\r\n    }\r\n\r\n    get url(){return this.id}\r\n\r\n    get initials(){\r\n        if (this.name){\r\n            let names = this.name.split(' ')\r\n            return (names[0][0] + names[names.length-1][0]).toUpperCase()\r\n        }else{\r\n            return undefined\r\n        }\r\n    }\r\n\r\n    computeAge(date){\r\n        // TODO subtract birthDate and date\r\n        return undefined\r\n    }\r\n\r\n    get abilities(){return this._abilities}\r\n    addAbility(ability){\r\n        if (!(ability in this._abilities)){\r\n            this._abilities.push(ability)\r\n        }                \r\n    }\r\n\r\n    get occupations(){return this._occupations}\r\n    addOccupation(occupation){\r\n        if(!(occupation in this._occupations)){\r\n            this._occupations.push(occupation)\r\n        }\r\n    }\r\n\r\n    get presentInWorks(){return this._presentInWorks}\r\n    addPresentInWork(work){\r\n        if(!(work in this._presentInWorks)){\r\n            this._presentInWorks.push(work)\r\n        }        \r\n    }\r\n\r\n    get children(){return this._children}\r\n    addChild(child){\r\n        if (!(child in this._children)){\r\n            this._children.push(child)\r\n        }\r\n    }\r\n\r\n    get partners(){return this._partners}\r\n    addPartner(partner){\r\n        if(!(partner in this._partners)){\r\n            this._partners.push(partner)\r\n        }\r\n    }\r\n    \r\n}\r\n\r\nexport default Character","class Body{\r\n\r\n    constructor(data, threshold){\r\n        this.data = data\r\n        this._threshold = threshold //size threshold to be considered a planet\r\n\r\n        this.bodyType = Body.computeBodyType(data.presentInWorks.length, threshold)\r\n        this.x = undefined\r\n        this.y = undefined\r\n        this.radius = 5\r\n    }\r\n\r\n    static get PLANET(){return 'planet'}\r\n    static get STAR(){return 'star'}\r\n    static get DUST(){return 'dust'}\r\n    \r\n    static computeBodyType(size, threshold){\r\n        if (size > threshold) return Body.PLANET\r\n        if (size > 0)         return Body.STAR\r\n        // not present in works \r\n        return Body.DUST\r\n    }\r\n\r\n    isDust(){return this.bodyType === Body.DUST}\r\n    isPlanet(){return this.bodyType === Body.PLANET}\r\n    isStar(){return this.bodyType === Body.STAR}\r\n}\r\n\r\nexport default Body","import React, {PureComponent} from 'react'\r\nimport './Star.css'\r\nimport {select as d3Select} from 'd3-selection'\r\n\r\nclass Star extends PureComponent{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {selected: false}\r\n        this.handleClick = this.handleClick.bind(this)\r\n    }\r\n\r\n    _tooltipHtml(){\r\n        let d = this.props.body.data\r\n        return (`<div>\r\n                    <div className='row Star-Tooltip-name'>\r\n                        <a href=\"${d.url}\" target=\"_blank\" title=\"Click opens a new tab with all details\">${d.name}</a>\r\n                    </div>\r\n                    <div className='row Star-Tooltip-summary'>\r\n                        <b>${d.gender}</b> with <b>${d.abilities.length}</b> super abilities and present in <b>${d.presentInWorks.length}</b> works.\r\n                    </div>\r\n                    <div className='row Star-Tooltip-abilities'>\r\n                        <div>${d.abilities.join(', ')}</div>\r\n                    </div>\r\n                </div>`)\r\n    }\r\n\r\n    _genderClass(data){\r\n        return data.gender === 'male' || data.gender === undefined ? 'male' : 'nonMale'\r\n    }\r\n\r\n    _selectedClass(){\r\n        return this.state.selected ? ' selected ' : ''\r\n    }\r\n\r\n    _bodyStyle(){\r\n        if(this.state.selected){            \r\n            return {strokeWidth: this.props.body.r*0.3,\r\n                    stroke: 'yellow',\r\n                    fill: 'purple'}\r\n        }else{\r\n            return {}\r\n        }\r\n    }\r\n\r\n    _renderBody(){\r\n        let body = this.props.body\r\n        return <circle                                        \r\n            className={'Star-'+body.bodyType+' Star-Gender-'+ this._genderClass(body.data)  + this._selectedClass()} \r\n            cx={0} \r\n            cy={0} \r\n            r={body.r}   \r\n            style={this._bodyStyle()}\r\n        /> \r\n    }\r\n\r\n    _renderCircle(){        \r\n        let body = this.props.body\r\n\r\n        if(body.bodyType === 'planet'){\r\n            return <g>\r\n                        <circle\r\n                            cx={0} \r\n                            cy={0} \r\n                            r={body.r*1.1}\r\n                            className={'Star-Glow-Gender-'+ this._genderClass(body.data)}\r\n                        />\r\n                        {this._renderBody(body)}\r\n                    </g>\r\n        }else{\r\n            return this._renderBody(body)\r\n        }\r\n    }\r\n\r\n    _renderLabel(){\r\n        let body = this.props.body\r\n        let r = body.r*1.3\r\n        let t = Math.PI/4\r\n        return <text \r\n                    x={r*Math.cos(t)} \r\n                    y={r*Math.sin(t)} \r\n                    className=\"Star-label\" \r\n                    visibility={this.state.selected?'visible':'hidden'}>{body.data.name}\r\n                </text>\r\n    }\r\n\r\n    _expandSelectionArea(r){\r\n        return <circle className='Star-around' cx={0} cy={0} r={r>2?r:2}  styles={'opacity:0.0;'} />\r\n    }\r\n\r\n    _showLabel(body){\r\n        d3Select(\"#\"+body.data.key)\r\n            .select('text')\r\n            .attr('selected', this.state.selected)\r\n            .attr('visibility', this.state.selected ? 'visible' : 'hidden')\r\n    }\r\n\r\n    _highlightNeighbors(){\r\n        let partners = this.props.body.data.partners\r\n        let children = this.props.body.data.children\r\n        \r\n        partners.forEach(partner =>{\r\n            if(partner.body !== undefined){\r\n                // show link\r\n                d3Select(\"#\"+this.props.body.data.key+\"_\"+partner.body.data.key)\r\n                                .attr('visibility', this.state.selected ? 'visible' : 'hidden')\r\n                // show label\r\n               this._showLabel(partner.body)\r\n            }\r\n        })\r\n\r\n        children.forEach(child =>{            \r\n            if(child.body !== undefined){\r\n                d3Select(\"#\"+this.props.body.data.key+\"_\"+child.body.data.key)\r\n                    .attr('visibility', this.state.selected ? 'visible' : 'hidden')\r\n                this._showLabel(child.body)\r\n            }\r\n        })\r\n    }\r\n\r\n    handleClick() {\r\n        console.log(this)\r\n        this.setState(state => ({\r\n          selected: !state.selected\r\n        }));        \r\n    }\r\n\r\n    render(){\r\n        let {x, y, r} = this.props.body     \r\n\r\n        return <g id={this.props.body.data.key} transform={`translate(${x},${y})`}>\r\n                    <g\r\n                        data-tip={this._tooltipHtml()}\r\n                        data-for={`characterTooltip${this.props.comic}`}\r\n                        data-html={true}\r\n                        onClick={this.handleClick}\r\n                        >\r\n                        {this._expandSelectionArea(r)}\r\n                        {this._renderCircle()}                                                \r\n                    </g>\r\n                    <g>\r\n                        {this._renderLabel()}\r\n                    </g>    \r\n\r\n                    {this._highlightNeighbors()}                \r\n                </g>\r\n    }\r\n}\r\n\r\nStar.defaultProps = {\r\n    visible: true\r\n}\r\n\r\nexport default Star","import React, {Component} from 'react'\r\nimport './Orbit.css'\r\nimport Star from '../star/Star'\r\n\r\n\r\nclass Orbit extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.props.bodies.sort((a,b) => (a.data.initials > b.data.initials) ? 1 : ((b.data.initials > a.data.initials) ? -1 : 0))\r\n    }\r\n\r\n    _renderLargeBodies(){\r\n        let largeBodies = this.props.bodies.filter(body=>!body.isDust())\r\n        return largeBodies.map((body, i) => {\r\n            return <Star key={body.data.key} comic={this.props.comic} body={body} />\r\n        })\r\n    }\r\n\r\n    _renderDust(){ \r\n        let dust = this.props.bodies.filter(body=>body.isDust())\r\n        return dust.map((body,i) => {\r\n                return <Star key={body.data.key} comic={this.props.comic} body={body} />\r\n        })\r\n    }\r\n\r\n    _renderEllipse(){\r\n        let {cx, cy, rx, ry} = this.props\r\n    \r\n        return <ellipse cx={cx} cy={cy} rx={rx} ry={ry}/>\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <g className=\"Orbit\">\r\n                {this._renderEllipse()}\r\n                {this._renderLargeBodies()}\r\n                {this._renderDust()}\r\n            </g>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Orbit","\r\n\r\nimport React, {Component} from 'react'\r\nimport './Links.css'\r\n\r\nexport default class Link extends Component{\r\n    render(){\r\n        let {type, source, target, vis} = this.props       \r\n        return <line \r\n                    className={`Link Link-${type}`}\r\n                    x1={source.x}\r\n                    y1={source.y}\r\n                    x2={target.x}\r\n                    y2={target.y}\r\n                    visibility={vis}                        \r\n                    id={source.data.key+'_'+target.data.key}\r\n                />\r\n    }\r\n}\r\n\r\n","import React, {Component} from 'react'\r\nimport Link from './Link'\r\nimport './Links.css'\r\n\r\nclass Links extends Component{\r\n\r\n    _childrenLinks(bodies){    \r\n        return this.props.bodies.map(body => {\r\n            return body.data.children.map(child=>{\r\n                return this._Link(body, \r\n                                this.props.bodies.find(d=>d.data.id === child.id), \r\n                                'child',\r\n                                this.props.showChildren ? 'visible':'hidden')\r\n            })\r\n        })            \r\n    }\r\n\r\n    _partnersLinks(){    \r\n        return this.props.bodies.map(body => {\r\n            return body.data.partners.map(partner=>{\r\n                return this._Link(body, \r\n                                this.props.bodies.find(d=>d.data.id === partner.id),//partner.body, \r\n                                'partner', \r\n                                this.props.showPartners?'visible':'hidden')\r\n            })\r\n        })                   \r\n    }\r\n\r\n    _Link(source, target, type, vis){\r\n            if (target === undefined) return ''\r\n        \treturn <Link \r\n                        key={source.data.key + target.data.key}\r\n                        type={type}\r\n                        source={source}\r\n                        target={target}\r\n                        vis={vis}\r\n                    />\r\n    }\r\n\r\n    _renderLinks(){\r\n        return <g className={`Links Links-Galaxy-${this.props.comic}`}>\r\n                {this._childrenLinks()}\r\n                {this._partnersLinks()}\r\n               </g>            \r\n    }\r\n\r\n    render(){\r\n        return this._renderLinks()\r\n    }\r\n}\r\n\r\nexport default Links","import React, {Component} from 'react'\r\nimport Sun from '../star/Sun'\r\nimport PropTypes from 'prop-types';\r\nimport Character from '../../dataset/Character'\r\nimport Body from './Body'\r\nimport Orbit from '../orbit/Orbit'\r\nimport {max as d3max} from 'd3-array'\r\nimport {scaleLinear} from 'd3-scale'\r\nimport ReactTooltip from 'react-tooltip'\r\nimport ReactDOM from 'react-dom'\r\nimport Links from '../link/Links'\r\n\r\n\r\nclass Galaxy extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        if (!(props.data[0] instanceof Character)){ throw new Error('Prop <data> should be an array of <Character>')}\r\n\r\n        this.galaxyName = props.comic\r\n        this.data = props.data  \r\n        this.orbits = props.orbits\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"Galaxy Component did mount.\")\r\n        if (this.state === undefined || this.state === null || this.state.bodies === undefined){\r\n            this.setState({bodies: this._createBodies()})\r\n        }\r\n    }\r\n\r\n    _averageWorksN(){\r\n        let important = this.data.filter(d=>d.presentInWorks.length>2)\r\n        return important.map(d => d.presentInWorks.length).reduce((a,b)=>a+b,0)/important.length\r\n    }\r\n\r\n    /**\r\n     * Create and set the Body type (planet, star or dust)\r\n     * Return vector of Body\r\n     */\r\n    _createBodies(){\r\n        console.log(`state is ${this.state}; creating state.bodies...`)        \r\n        // ? Allow to change this threshold\r\n        let threshold = this._averageWorksN()\r\n\r\n        let bodies = []\r\n        this.data.forEach((char)=>{\r\n            let body = new Body(char, threshold)\r\n            bodies.push(body)\r\n        })\r\n\r\n        this._computeOrbitsBodies(bodies)\r\n\r\n        bodies.forEach(body =>{\r\n            for (let i = 0; i < body.data.children.length; i++){\r\n                let child = body.data.children[i]                \r\n                child.body = bodies.find(d=>d.data.id === child.id) // url === url\r\n            }\r\n        })\r\n\r\n        bodies.forEach(body =>{\r\n            for (let i = 0; i < body.data.partners.length; i++){\r\n                let partner = body.data.partners[i]\r\n                partner.body = bodies.find(d=>d.data.id === partner.id)\r\n            }            \r\n        })\r\n        \r\n        return bodies\r\n    }\r\n\r\n    x(rx, t){return rx * Math.cos(t)}\r\n    y(ry, t){return ry * Math.sin(t)}\r\n\r\n\r\n    randomSign(){return Math.random()<0.5?-1:1}\r\n\r\n    /**\r\n     * Set Body.x and Body.y in an Orbit\r\n     * @param {array} bodies array of Body\r\n     * @param {numeric} randomR how x,y will randomly vary\r\n     * @param {function} r d3-scale function\r\n     */\r\n    _setUpOrbitBodies(rx, ry, randomR, bodies, r, start=1, allBodies){\r\n        if (r === undefined){\r\n            let maxWorks = d3max(allBodies, d=>d.data.presentInWorks.length);           \r\n            r = scaleLinear().domain([0, maxWorks]).range([1,10]);    \r\n        }\r\n\r\n        let dt = 2*Math.PI/bodies.length; \r\n\r\n        bodies = bodies.map((body, i) => {\r\n            if (randomR === undefined){\r\n                let t = dt*(start+i);\r\n                body.x = this.x(rx, t);\r\n                body.y = this.y(ry, t);       \r\n            }else{\r\n                let t = dt*i;\r\n                body.x = this.x(rx, t) + ((Math.random()*randomR)+5) * this.randomSign();          \r\n                body.y = this.y(ry, t) + ((Math.random()*randomR)+5) * this.randomSign();\r\n            }\r\n            body.r = r(body.data.presentInWorks.length);\r\n            return body;\r\n        })\r\n    }\r\n\r\n    _computeOrbitsBodies(bodies){\r\n        this.orbits.forEach((orbit, i) =>{\r\n\r\n            let orbitBodies = bodies.filter(body => {\r\n                let size = body.data.abilities.length\r\n                return  (size <= orbit.levels.max && size >= orbit.levels.min)\r\n            });                    \r\n            \r\n            // placement of dust\r\n            let dust = orbitBodies.filter(body => body.isDust())\r\n            this._setUpOrbitBodies(orbit.rx, orbit.ry, 15, dust, (d)=>0.5, i*10, bodies);\r\n\r\n            // placement of planets and starts\r\n            let largeBodies = orbitBodies.filter(body => !body.isDust())\r\n            this._setUpOrbitBodies(orbit.rx, orbit.ry, undefined, largeBodies, undefined, i*10, bodies);\r\n \r\n        })\r\n    }\r\n\r\n    _renderOrbits(bodies){                \r\n        return this.orbits.map((orbit, i) =>{\r\n            let orbitBodies = bodies.filter(body => {\r\n                let size = body.data.abilities.length\r\n                return  (size <= orbit.levels.max && size >= orbit.levels.min)\r\n            });\r\n            return <Orbit key={this.props.comic+'_orbit_'+i} comic={this.props.comic} bodies={orbitBodies} {...orbit}/>\r\n        })\r\n    }\r\n\r\n    _renderGalaxy(){\r\n        return <g className='galaxy' transform={'translate('+this.props.x+','+this.props.y+')'}>               \r\n\r\n                    <Links \r\n                        showPartners={this.props.showPartners}\r\n                        showChildren={this.props.showChildren}\r\n                        bodies={this.state.bodies}\r\n                        comic={this.props.comic}\r\n                    />\r\n\r\n                    <g transform='translate(-30,-30)'>\r\n                        <Sun galaxyName={this.props.comic} width={60} height={60}/>\r\n                    </g>\r\n\r\n                    {this._renderOrbits(this.state.bodies)}\r\n                \r\n                    {ReactDOM.createPortal(<ReactTooltip \r\n                        key=\"Universe-Node-Tooltip\"\r\n                        id={`characterTooltip${this.props.comic}`}\r\n                        className='Star-Tooltip'\r\n                        effect='solid'\r\n                        delayHide={200}\r\n                        delayShow={200}\r\n                        delayUpdate={200}                        \r\n                        border={true}\r\n                        html={true}/>,       document.getElementById(\"tooltips\"))}\r\n                </g>\r\n    }\r\n\r\n    render(){\r\n        return this.state && this.state.bodies && this._renderGalaxy()\r\n    }\r\n}\r\n\r\nGalaxy.defaultProps = {\r\n    orbits : [ // each line is an orbit\r\n        {cx:0, cy:0, rx:420, ry: 235, levels:{min:0, max:0}},\r\n        {cx:0, cy:0, rx:330, ry: 190, levels:{min:1, max:2}},\r\n        {cx:0, cy:0, rx:250, ry: 160, levels:{min:3, max:4}},\r\n        {cx:0, cy:0, rx:190, ry: 120, levels:{min:5, max:6}},\r\n        {cx:0, cy:0, rx:140, ry: 90, levels:{min:7, max:8}},\r\n        {cx:0, cy:0, rx:80, ry: 60, levels:{min:9, max:20}} // smallest ellipse, closer to the sun\r\n    ],\r\n    showPartners: false,\r\n    showChildren: false\r\n}\r\n\r\nGalaxy.propTypes = {\r\n    comic: PropTypes.string.isRequired, // used to set the correct Sun\r\n    data: PropTypes.array.isRequired,\r\n    x: PropTypes.number.isRequired,\r\n    y: PropTypes.number.isRequired\r\n}\r\n\r\nexport default Galaxy","import React, {Component} from 'react'\r\nimport {selectAll as d3SelectAll, select as d3Select} from 'd3-selection'\r\nimport './SearchBox.css'\r\n\r\nclass SearchBox extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n    handleChange(e){\r\n        d3SelectAll('text').filter(function(){return !d3Select(this).attr('selected')}).attr('visibility','hidden')\r\n\r\n        if(e.target.value !== \"\"){\r\n            d3SelectAll('text')\r\n                .filter(function(){\r\n                    return e.target.value.toLowerCase().includes(d3Select(this).text().toLowerCase()) || d3Select(this).text().toLowerCase().includes(e.target.value.toLowerCase())})\r\n                .attr('visibility','visible')\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return <input   type=\"text\" \r\n                        className=\"SearchBox-input\" \r\n                        onChange={this.handleChange}                        \r\n                        placeholder=\"Search...\" />\r\n    }\r\n}\r\n\r\nexport default SearchBox","import React, {PureComponent} from 'react'\r\nimport Galaxy from '../galaxy/Galaxy'\r\nimport SearchBox from '../SearchBox'\r\nimport './Universe.css'\r\nimport './../star/Star.css'\r\n\r\nimport {UncontrolledReactSVGPanZoom} from 'react-svg-pan-zoom';\r\nimport ResponsiveWrapper from '../ResponsiveWrapper'\r\n\r\n\r\nfunction Tooltips(props){\r\n    return <div id=\"tooltips\"></div>\r\n  }\r\n  \r\nclass Universe extends PureComponent{\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {showPartners: false, showChildren: false}\r\n        this._setShowChildren = this._setShowChildren.bind(this)\r\n        this._setShowPartners = this._setShowPartners.bind(this)\r\n\r\n        this.Viewer = null\r\n\r\n        this.marvelCharacters = props.marvelData\r\n        this.dcCharacters = props.dcData\r\n\r\n        this.marvelCharacters.sort((a,b) => (a.initials > b.initials) ? 1 : ((b.initials > a.initials) ? -1 : 0))\r\n        this.dcCharacters.sort((a,b) => (a.initials > b.initials) ? 1 : ((b.initials > a.initials) ? -1 : 0))\r\n\r\n        if (this.dcCharacters === undefined) {throw new Error(\"ComicsQueries.saveDcCharacters() should be executed to save the data\")}\r\n        if (this.marvelCharacters === undefined) {throw new Error(\"ComicsQueries.saveMarvelCharacters() should be executed to save the data\")}\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.Viewer.closeMiniature();\r\n        this.Viewer.fitToViewer();    \r\n        \r\n    }\r\n\r\n    _setShowChildren(b){\r\n        this.setState({showChildren: b})        \r\n    }\r\n    _setShowPartners(b){\r\n        this.setState({showPartners: b})\r\n    }\r\n\r\n    render(){\r\n        console.log(\"dimensions***\", this.props.width, this.props.height)\r\n        let svgWidth = 1600\r\n        let svgHeight = 700\r\n        return (\r\n            <div id='div-universe'>                        \r\n                <UncontrolledReactSVGPanZoom\r\n                        key=\"Universe-View\" \r\n                        detectAutoPan={false}              \r\n                        className='Universe-viewer'                 \r\n                        width={this.props.width} height={this.props.height}\r\n                        ref={Viewer => this.Viewer = Viewer}\r\n                        //onClick={event => console.log('click', event.x, event.y, event.originalEvent)}\r\n                        background='black'\r\n                        SVGBackground='black'\r\n                        toolbarProps={{SVGAlignX: 'center', SVGAlignY: 'center'}}>            \r\n                    \r\n                    <svg className=\"Universe\" width={svgWidth} height={svgHeight} styles='background-color:\"black\"'>\r\n                        <Galaxy \r\n                            key={'marvel-galaxy'}\r\n                            data={this.marvelCharacters}\r\n                            comic='marvel'\r\n                            x={435}\r\n                            y={355}\r\n                            showPartners={this.state.showPartners}\r\n                            showChildren={this.state.showChildren}\r\n                        />\r\n                        <Galaxy\r\n                            key={'dc-galaxy'}\r\n                            data={this.dcCharacters}\r\n                            comic='dc'\r\n                            x={1150}\r\n                            y={355}\r\n                            showPartners={this.state.showPartners}\r\n                            showChildren={this.state.showChildren}\r\n                        />\r\n                    </svg>\r\n                </UncontrolledReactSVGPanZoom>\r\n                <hr/>\r\n                <SearchBox />\r\n                <button className=\"Universe-Button Universe-Button-child\"\r\n                        onClick={()=>this._setShowChildren(!this.state.showChildren)}>Children</button>\r\n                <button className=\"Universe-Button Universe-Button-partner\" \r\n                        onClick={()=>this._setShowPartners(!this.state.showPartners)}>Partners</button>     \r\n\r\n                { (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) ?alert(\"Consider using a Desktop/Laptop to interact with the visualization.\"): \"\"}\r\n              <div style={{textAlign: 'right'}}>\r\n                  <div class=\"social\">\r\n                    <span class=\"twitter\">\r\n                      <a href=\"https://twitter.com/share?ref_src=twsrc%5Etfw\" class=\"twitter-share-button\" data-show-count=\"false\">Tweet</a>\r\n                    </span>\r\n                    <span class=\"github\">\r\n                      <a class=\"github-button\" href=\"https://github.com/heberleh/comics-universe\" data-show-count=\"true\" aria-label=\"Star heberleh/comics-universe on GitHub\">Star</a>\r\n                    </span>\r\n                    <span class=\"Facebook\">\r\n                      <span class=\"fb-share-button\" data-href=\"https://heberleh.github.io/comics-universe/\" data-layout=\"button_count\" data-size=\"small\">\r\n                        <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fheberleh.github.io%2Fcomics-universe%2F&amp;src=sdkpreparse\" class=\"fb-xfbml-parse-ignore\">Share</a>\r\n                      </span>\r\n                    </span>\r\n                  </div>\r\n              </div>\r\n                \r\n                <Tooltips />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ResponsiveWrapper(Universe)","\r\n// Adapted code. Original from  Kacper Goliński from https://medium.com/@caspg/responsive-chart-with-react-and-d3v4-afd717e57583\r\n\r\nimport React, { Component } from 'react'\r\n\r\nexport default ChartComponent => (\r\n  class ResponsiveChart extends Component {\r\n    constructor(props) {\r\n      super(props)\r\n\r\n      this.state = {\r\n        containerWidth: null,\r\n        containerHeight: null,\r\n      }\r\n\r\n      this.fitParentContainer = this.fitParentContainer.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.fitParentContainer()\r\n      window.addEventListener('resize', this.fitParentContainer)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      window.removeEventListener('resize', this.fitParentContainer)\r\n    }\r\n\r\n    fitParentContainer() {\r\n      const { containerWidth, containerHeight } = this.state\r\n\r\n      console.log(\"chartContainer\", this.chartContainer)\r\n      console.log(\"chartContainer.parentNode\", this.chartContainer.parentNode)\r\n      \r\n      const currentContainerWidth = this.chartContainer.parentNode\r\n                                        .getBoundingClientRect()\r\n                                        .width\r\n      const currentContainerHeight = this.chartContainer.parentNode\r\n                                        .getBoundingClientRect()\r\n                                        .height\r\n                                           \r\n      const shouldResize = (containerWidth !== currentContainerWidth) || (containerHeight !== currentContainerHeight)\r\n\r\n      if (shouldResize) {\r\n        this.setState({\r\n          containerWidth: currentContainerWidth,\r\n          containerHeight: currentContainerHeight,\r\n        })\r\n      }\r\n    }\r\n\r\n    renderChart() {\r\n      const parentWidth = this.state.containerWidth\r\n      const parentHeight = this.state.containerHeight\r\n      let height = parentHeight\r\n      if( /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ) {\r\n        height = height*0.5\r\n      }\r\n      return (\r\n        <ChartComponent {...this.props} width={parentWidth} height={height}/>\r\n      )\r\n    }\r\n\r\n    render() {\r\n      const { containerWidth, containerHeight } = this.state\r\n      const shouldRenderChart = containerWidth !== null && containerHeight !== null\r\n\r\n      return (\r\n        <div\r\n          ref={(el) => {this.chartContainer = el }}\r\n          className=\"Responsive-wrapper\"\r\n        >\r\n          {shouldRenderChart && this.renderChart()}\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n)","import React, { Component } from 'react'\r\nimport * as d3Axis from 'd3-axis'\r\nimport { select as d3Select } from 'd3-selection'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport './Axis.css'\r\n\r\nclass Axis extends Component{\r\n\r\n    componentDidMount() {\r\n        this.renderAxis()\r\n    }\r\n    \r\n    componentDidUpdate() {\r\n        this.renderAxis()\r\n    }\r\n    \r\n    renderAxis(){\r\n        const axisType = `axis${this.props.orient}`\r\n\r\n        const axis = d3Axis[axisType]()\r\n                .scale(this.props.scale)\r\n                .tickSize(-this.props.tickSize)\r\n                .tickPadding(this.props.tickPadding)\r\n                .ticks(this.props.ticks)\r\n\r\n        d3Select(this.axisElement).call(axis)\r\n    }\r\n\r\n    render(){        \r\n        return (\r\n        <g\r\n            className={`Axis Axis-${this.props.orient} Axis-${this.props.scale.type}`}\r\n            ref={(el) => { this.axisElement = el; }}\r\n            transform={this.props.translate}\r\n          />\r\n        )\r\n    }\r\n\r\n}\r\n\r\nAxis.defaultProps = {\r\n   ticks: [4],\r\n   tickPadding: [12]\r\n}\r\n\r\nAxis.propTypes = {\r\n    ticks:  PropTypes.oneOfType([\r\n        PropTypes.number,\r\n        PropTypes.array\r\n    ]),\r\n    tickPadding : PropTypes.oneOfType([\r\n        PropTypes.number,\r\n        PropTypes.array\r\n    ]),\r\n    orient: PropTypes.string.isRequired,\r\n    scale: PropTypes.func.isRequired,\r\n    translate: PropTypes.string.isRequired,\r\n    tickSize: PropTypes.number.isRequired\r\n}\r\n\r\nexport default Axis","\r\nimport React from 'react'\r\nimport Axis from './Axis'\r\n\r\nexport default ({minSize, scales, margins, svgDimensions, ticks, dataModel}) => {\r\n\r\n  // const xProps = {\r\n  //   orient: 'Bottom',\r\n  //   scale: scales.xScale,\r\n  //   translate: `translate(0, ${svgDimensions.height - margins.bottom})`,\r\n  //   tickSize: svgDimensions.height - margins.top - margins.bottom,\r\n  //   ticks: ticks.x.ticks,\r\n  //   tickPadding: ticks.x.tickPadding\r\n  // }\r\n\r\n  const yProps = {\r\n    orient: 'Left',\r\n    scale: scales.yScale,\r\n    translate: `translate(${margins.left}, 0)`,\r\n    tickSize: svgDimensions.width - margins.left - margins.right,\r\n    ticks: ticks.y.ticks,\r\n    tickPadding: ticks.y.tickPadding\r\n  }\r\n\r\n  return (\r\n    <g>\r\n      {/* <Axis {...xProps} /> uncomment this and set up x-axis*/} \r\n      <Axis {...yProps} />\r\n    </g>\r\n  )\r\n\r\n}","import React, { Component } from 'react'\r\n// import { scaleLinear } from 'd3-scale'\r\n// import { interpolateLab } from 'd3-interpolate'\r\n\r\n\r\nclass Bars extends Component{\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.key = props.key\r\n        // changed to Datamodel.colorFunc()\r\n        // this.colorScale = scaleLinear()\r\n        //   .domain([0, this.props.maxValue/10, this.props.maxValue])\r\n        //   .range(['#E8895B', '#38397C', '#10101C'])\r\n        //   .interpolate(interpolateLab)\r\n      }\r\n    \r\n      render() {\r\n        const { scales, margins, dataModel} = this.props\r\n        const { xScale, yScale } = scales\r\n\r\n        const bars = (\r\n          dataModel.data.map(d =>\r\n            <rect\r\n              className={dataModel.classFunc(d)}\r\n              key={dataModel.bandFunc(d)+dataModel.valueFunc(d)}\r\n              \r\n              x={margins.left}\r\n              y={yScale(dataModel.bandFunc(d))}\r\n              width={dataModel.valueFunc(d)===0? 0: xScale(dataModel.valueFunc(d))}\r\n              height={yScale.bandwidth()}              \r\n              total={dataModel.valueFunc(d)}\r\n            \r\n              data-tip={dataModel.getTooltipHtml(dataModel, d)}\r\n              data-for={'TooltipBarChart'+this.key}\r\n              data-html={true}\r\n            />,\r\n          )\r\n        )\r\n    \r\n        return (      \r\n          <g>{bars}</g>       \r\n        )\r\n      }\r\n\r\n}\r\n\r\nexport default Bars","//Based on this work:\r\n//https://medium.com/@caspg/responsive-chart-with-react-and-d3v4-afd717e57583\r\n\r\n\r\nimport React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {scaleLinear, scaleBand} from 'd3-scale'\r\nimport Axes from '../Axis/Axes'\r\nimport Bars from '../Bars/Bars'\r\nimport ResponsiveWrapper from '../ResponsiveWrapper'\r\nimport ReactTooltip from 'react-tooltip'\r\n\r\nimport './BarChart.css'\r\n\r\nclass BarChart extends Component{\r\n    constructor(props){        \r\n        super(props)        \r\n\r\n        this.key = props.key\r\n\r\n        this.xScale = scaleLinear()\r\n        this.xScale.type = \"Linear\"\r\n\r\n        this.yScale = scaleBand()\r\n        this.yScale.type = \"Band\"\r\n    }    \r\n\r\n    render(){\r\n        const props = this.props\r\n        \r\n        const maxValue = Math.max(...props.dataModel.data.map(d=>props.dataModel.valueFunc(d)))  \r\n                \r\n        const yScale = this.yScale \r\n                        .padding([.5])                      \r\n                        .domain(props.dataModel.data.map(d => props.dataModel.bandFunc(d)))\r\n                        .range([props.height - props.margins.bottom, props.margins.top])\r\n               \r\n        const xScale = this.xScale\r\n                        .domain([0, maxValue])\r\n                        .range([0, props.width - props.margins.right - props.margins.left])\r\n\r\n        const ticks ={\r\n            x: {ticks:[5], tickPadding:6},\r\n            y: {ticks:[], tickPadding:12}\r\n        }\r\n\r\n        return (\r\n                <div className='BarChart'>\r\n                    <h3 className=\"BarChart\">{props.title}</h3>\r\n                    <svg width={props.width} \r\n                        height={props.height}>\r\n\r\n                        <Axes\r\n                            scales={{xScale, yScale}}\r\n                            margins={props.margins} \r\n                            svgDimensions={{width:props.width, height:props.height}} \r\n                            ticks={ticks}\r\n                            dataModel={props.dataModel}\r\n                        />\r\n\r\n                        <Bars    \r\n                            key={this.key}                        \r\n                            scales={{xScale, yScale}}\r\n                            margins={props.margins}\r\n                            dataModel={props.dataModel}\r\n                            maxValue={maxValue}\r\n                            svgDimensions={{width:props.width, height:props.height}} \r\n                        />\r\n\r\n                    </svg>\r\n                    <ReactTooltip \r\n                            id={'TooltipBarChart'+this.key}\r\n                            html={true}\r\n                            border={true}/>\r\n                </div>                \r\n            )\r\n    }\r\n}\r\n\r\nfunction getMargins(){\r\n    if( /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ) {\r\n        return {top: 1, right: 1, bottom: 1, left: 140   }\r\n    }else{\r\n        return  {top: 5, right: 50, bottom: 5, left: 150 }\r\n    }\r\n}\r\n\r\nBarChart.defaultProps = {\r\n    width: 450,\r\n    height: 1200,\r\n    margins: getMargins(),\r\n    parsPadding: 0.5\r\n}\r\n\r\nBarChart.propTypes ={\r\n    dataModel: PropTypes.object.isRequired,\r\n    width: PropTypes.number,\r\n    height: PropTypes.number,\r\n    margins: PropTypes.object,\r\n    barsPadding: PropTypes.number\r\n};\r\n\r\nexport default ResponsiveWrapper(BarChart);","import React, { Component } from 'react'\r\n\r\nexport default ChartComponent => (\r\n  class ResponsiveChart extends Component {\r\n    constructor(props) {\r\n      super(props)\r\n\r\n      this.state = {\r\n        containerWidth: null,\r\n      }\r\n\r\n      this.fitParentContainer = this.fitParentContainer.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.fitParentContainer()\r\n      window.addEventListener('resize', this.fitParentContainer)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      window.removeEventListener('resize', this.fitParentContainer)\r\n    }\r\n\r\n    fitParentContainer() {\r\n      const { containerWidth } = this.state\r\n      const currentContainerWidth = this.chartContainer\r\n                                        .getBoundingClientRect()\r\n                                        .width\r\n\r\n      const shouldResize = containerWidth !== currentContainerWidth\r\n\r\n      if (shouldResize) {\r\n        this.setState({\r\n          containerWidth: currentContainerWidth,\r\n        })\r\n      }\r\n    }\r\n\r\n    renderChart() {\r\n      const parentWidth = this.state.containerWidth\r\n\r\n      return (\r\n        <ChartComponent {...this.props} width={parentWidth} />\r\n      )\r\n    }\r\n\r\n    render() {\r\n      const { containerWidth } = this.state\r\n      const shouldRenderChart = containerWidth !== null\r\n\r\n      return (\r\n        <div\r\n          ref={(el) => { this.chartContainer = el }}\r\n          className=\"Responsive-wrapper\"\r\n        >\r\n          {shouldRenderChart && this.renderChart()}\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n)","import Character from './Character'\r\nconst marvelData = require('./marvelCharacters.json')\r\nconst dcData = require('./dcCharacters.json')\r\n\r\nclass LoadDataset{\r\n\r\n    static loadCharacters(json){\r\n        let characters = []\r\n        json.forEach(d=>{\r\n                let char = new Character(\r\n                            d.id, \r\n                            d.name, \r\n                            d.gender, \r\n                            d.birthDate, \r\n                            d._abilities, \r\n                            d._partners, \r\n                            d._children, \r\n                            d._presentInWorks, \r\n                            d._occupations );\r\n                characters.push(char)                \r\n            }    \r\n        );\r\n        return characters\r\n    }\r\n\r\n    static marvelData(){\r\n        return LoadDataset.loadCharacters(marvelData)\r\n    }\r\n\r\n    static dcData(){\r\n        return LoadDataset.loadCharacters(dcData)\r\n    }\r\n\r\n    static abilitiesDataModel(data){\r\n        let model = {data: [], valueFunc: d=>d.total, bandFunc: d=>d.label, classFunc: d=>d.cssClass}\r\n       \r\n        let count = {} // count number of char. has each ability\r\n        let countMale = {} // do the same for males\r\n        let countNonMale = {} //do the same for nonMales = #males - #undefined\r\n\r\n        model.count = count\r\n        model.countMale = countMale\r\n        model.countNonMale = countNonMale\r\n\r\n        function countAb(counter, ability){\r\n            if(ability in counter){\r\n                return counter[ability]\r\n            }else{\r\n                return 0\r\n            }\r\n        }\r\n\r\n        function incrementCount(counter, ability){\r\n            if (ability in counter){\r\n                counter[ability] +=1\r\n            }else{\r\n                counter[ability] = 1\r\n            }\r\n        }\r\n\r\n        model.getTooltipHtml = (model, d) => {\r\n            let ability = model.bandFunc(d)\r\n            return \"<div style='max-width:500px'><b>\"+\r\n                    ability+\"</b><br><br>\"+\r\n                    \"<b>\" + countAb(model.count, ability) + \"</b> in total <br>\"+\r\n                    countAb(model.countMale, ability) + \" males and \" +\r\n                    countAb(model.countNonMale, ability) + \" females, transgender or other<br><br>\" + \r\n                    d.names.join(', ')+\"</div>\"\r\n        }\r\n\r\n        let names = {}\r\n        data.forEach(char => {\r\n            char.abilities.forEach(ability => {\r\n                \r\n                names[ability] === undefined? names[ability] = [char.name] : names[ability].push(char.name)\r\n\r\n                incrementCount(count, ability)\r\n                if (char.gender !== undefined){\r\n                    if (char.gender === 'male'){\r\n                        incrementCount(countMale, ability)\r\n                    }else{\r\n                        incrementCount(countNonMale, ability)\r\n                    }                    \r\n                }\r\n            })\r\n        })\r\n\r\n\r\n        for(let ability in count){\r\n            let abilityData = {}\r\n            abilityData.total = count[ability]\r\n            abilityData.label = ability\r\n            abilityData.cssClass = countAb(countMale, ability) >= countAb(countNonMale, ability) ? 'BarChart-Ability-male' : 'BarChart-Ability-nonMale'\r\n            abilityData.names = names[ability]           \r\n            model.data.push(abilityData)\r\n        }\r\n\r\n        model.data.sort((a,b) => (a.total > b.total) ? 1 : ((b.total > a.total) ? -1 : 0))\r\n        \r\n        return model\r\n    }\r\n\r\n\r\n    static occupationsDataModel(data){\r\n        let model = {data: [], valueFunc: d=>d.total, bandFunc: d=>d.label, classFunc: d=>d.cssClass}\r\n       \r\n        let count = {} // count number of char. has each occupation\r\n        let countMale = {} // do the same for males\r\n        let countNonMale = {} //do the same for nonMales = #males - #undefined\r\n\r\n        model.count = count\r\n        model.countMale = countMale\r\n        model.countNonMale = countNonMale\r\n\r\n        function countAb(counter, occupation){\r\n            if(occupation in counter){\r\n                return counter[occupation]\r\n            }else{\r\n                return 0\r\n            }\r\n        }\r\n\r\n        function incrementCount(counter, occupation){\r\n            if (occupation in counter){\r\n                counter[occupation] +=1\r\n            }else{\r\n                counter[occupation] = 1\r\n            }\r\n        }\r\n\r\n        model.getTooltipHtml = (model, d) => {\r\n            let occupation = model.bandFunc(d)\r\n            return \"<div style='max-width:400px'><b>\"+\r\n                    occupation+\"</b><br><br>\"+\r\n                    \"<b>\" + countAb(model.count, occupation) + \"</b> in total <br>\"+\r\n                    countAb(model.countMale, occupation) + \" males and \" +\r\n                    countAb(model.countNonMale, occupation) + \" females, transgender or other<br><br>\" + \r\n                    d.names.join(', ')+\"</div>\"\r\n        }\r\n\r\n        let names = {}\r\n        data.forEach(char => {\r\n            char.occupations.forEach(occupation => {\r\n                \r\n                names[occupation] === undefined? names[occupation] = [char.name] : names[occupation].push(char.name)\r\n\r\n                incrementCount(count, occupation)\r\n                if (char.gender !== undefined){\r\n                    if (char.gender === 'male'){\r\n                        incrementCount(countMale, occupation)\r\n                    }else{\r\n                        incrementCount(countNonMale, occupation)\r\n                    }                    \r\n                }\r\n            })\r\n        })\r\n\r\n\r\n        for(let occupation in count){\r\n            let occupationData = {}\r\n            occupationData.total = count[occupation]\r\n            occupationData.label = occupation\r\n            occupationData.cssClass = countAb(countMale, occupation) >= countAb(countNonMale, occupation) ? 'BarChart-Occupation-male' : 'BarChart-Occupation-nonMale'\r\n            occupationData.names = names[occupation]           \r\n            model.data.push(occupationData)\r\n        }\r\n\r\n        model.data.sort((a,b) => (a.total > b.total) ? 1 : ((b.total > a.total) ? -1 : 0))\r\n        \r\n        return model\r\n    }\r\n}\r\n\r\nexport default LoadDataset","import React, { Component } from 'react'\r\nimport './App.css'\r\nimport Universe from './components/universe/Universe'\r\nimport legend from './static/images/legend.png'\r\nimport BarChart from './components/barchart/BarChart/BarChart';\r\nimport LoadDataset from './dataset/LoadDataset';\r\n//import $ from \"jquery\"\r\n\r\nrequire('bootstrap');\r\nrequire('bootstrap/dist/css/bootstrap.css');\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.title = \"Marvel & DC Characters\";\r\n    this.author = \"Henry Heberle\"\r\n    this.authorUrl = \"https://heberleh.github.io\"\r\n  }\r\n  \r\n  render() {\r\n\r\n    // $(document).keydown(function(event) {\r\n    //   if (event.ctrlKey===true && (event.which == '61' || event.which == '107' || event.which == '173' || event.which == '109'  || event.which == '187'  || event.which == '189'  ) ) {\r\n    //           event.preventDefault();\r\n    //       }\r\n    //       // 107 Num Key  +\r\n    //       // 109 Num Key  -\r\n    //       // 173 Min Key  hyphen/underscor Hey\r\n    //       // 61 Plus key  +/= key\r\n    //   });\r\n      \r\n    //   $(window).bind('mousewheel DOMMouseScroll', function (event) {\r\n    //           if (event.ctrlKey == true) {\r\n    //           event.preventDefault();\r\n    //           }\r\n    //   });\r\n    let marvelData =  LoadDataset.marvelData()\r\n    let dcData = LoadDataset.dcData()\r\n\r\n    function countGender(a, b, value, n){\r\n      if (b.gender === value && b.presentInWorks.length > n){\r\n        return a+1\r\n      }else{\r\n        return a\r\n      }\r\n    }\r\n\r\n    function countTotalGender(a, b, n){\r\n      if (b.gender !== undefined && b.presentInWorks.length > n){\r\n        return a+1\r\n      }else{\r\n        return a\r\n      }\r\n    }\r\n\r\n    // n: filter by minimum Number of works (n)\r\n    function percentageMale(data, n){\r\n      return parseInt(data.reduce((a,b)=>{return countGender(a,b,'male',n)},0)/data.reduce((a,b)=>countTotalGender(a,b,n),0)*100,0)\r\n    }\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        {/* <Header title={this.title} author={this.author} authorUrl={this.authorUrl}/> */}\r\n       \r\n        <div className=\"App-universe d-flex justify-content-center\">          \r\n            <Universe marvelData={marvelData} dcData={dcData} />                   \r\n        </div>\r\n\r\n        <hr style={{width: '97%', color: 'gray', opacity:0.1, height: '3px', backgroundColor:'gray'}} />\r\n\r\n       <div className='App-description-container'>\r\n\r\n          <div className=\"row App-description\">\r\n\r\n            <div className=\"col-sm-12 col-lg-6\">\r\n                <img className=\"img-fluid\" alt=\"Legend\" src={legend}/>\r\n            </div>\r\n            <div className=\"col-sm-12 col-lg-6\">\r\n\r\n               <p>:: <b>Comics Universe</b> ::</p> \r\n               <p>Marvel and DC galaxies were created with Wikipedia data extracted in Jun 2019. They are composed by instances of <b><i>fictional character</i></b>. If you are a comic expert, consider using the visualization to identify gaps in the data and contribute to <a href=\"https://en.wikipedia.org/wiki/Wikipedia:Contributing_to_Wikipedia\" target=\"_blank\" rel=\"noopener noreferrer\">Wikipedia</a> and <a href=\"https://www.wikidata.org/wiki/Wikidata:Contribute\" target=\"_blank\" rel=\"noopener noreferrer\">Wikidata</a>. You may also contribute to this project by creating a <a href=\"https://github.com/heberleh/comics-universes\" target=\"_blank\" rel=\"noopener noreferrer\"><b>Github</b></a> pull request, or just fav. or fork it to let me know. The system is coded in Javascript, React and D3.</p>\r\n\r\n               <p>On the left you find a description of the visualization attributes. In summary: <b>size</b> and <b>color</b> represent the number of works the characters are present in, or derived works; <b>white</b> is used to highlight the ones are not male. The closer the orbit (ellipses) is to its Sun, the more <b>super abilities</b> the characters have.</p>\r\n\r\n              <p>As expected, in both Marvel and DC galaxies we find females and other non-male genders as minorities in most of the works. This can be concluded by checking the amount of white circles in each galaxy. More precisely, excluding characters with undefined gender, <b>{percentageMale(marvelData, 10)}%</b> of Marvel's characters and <b>{percentageMale(dcData, 10)}%</b> of DC's characters present in <b>over 10 works</b> are male.</p>\r\n              \r\n              <p> Those numbers get more balanced when we consider characters that appear in fewer works: {percentageMale(marvelData, 0)}% (Marvel) and {percentageMale(dcData, 0)}% (DC) when considering characters with at least 1 work registered on Wikipedia; and {percentageMale(marvelData, -1)}% (Marvel) and {percentageMale(dcData, -1)}% (DC) when considering characters with 0 or more registered works. Below, you find bar charts that represent the distributions of abilities and of occupations, with gender counts and character names in the tooltips.</p>\r\n\r\n              <br/>\r\n              <p style={{textAlign: 'right'}}>I hope you enjoy the visualizations. If so, consider <b>sharing</b> it with your friends :)</p>\r\n\r\n              <div className=\"App-author\">\r\n                <p>Feel free to contact me by e-mail or any other media.</p>\r\n                <p>Henry Heberle, Phd</p>\r\n                <p><a href=\"https://twitter.com/h_heberle?ref_src=twsrc%5Etfw\" class=\"twitter-follow-button\" data-show-count=\"false\">Follow @h_heberle</a><script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script></p>\r\n                \r\n                <a class=\"github-button\" href=\"https://github.com/heberleh\" aria-label=\"Follow @heberleh on GitHub\">Follow @heberleh</a>\r\n\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n\r\n          <div className=\"row App-BarChart\" >\r\n            <div className=\"col-sm-12 col-lg-6\">              \r\n              <div>\r\n                <BarChart title=\"Marvel - Abilities\" dataModel={LoadDataset.abilitiesDataModel(marvelData)} key=\"Abilities-Marvel\"/>\r\n              </div>\r\n              <div>\r\n                <BarChart title=\"Marvel - Occupations\" height={3500} dataModel={LoadDataset.occupationsDataModel(marvelData)} key=\"Occupations-Marvel\"/>\r\n              </div>              \r\n            </div>\r\n            <div className=\"col-sm-12 col-lg-6\">\r\n              <div>\r\n                <BarChart title=\"DC - Abilities\" dataModel={LoadDataset.abilitiesDataModel(dcData)} key=\"Abilities-DC\"/>\r\n              </div>\r\n              <div>\r\n                <BarChart title=\"DC - Occupations\" height={4000} dataModel={LoadDataset.occupationsDataModel(dcData)} key=\"Occupations-DC\"/>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n\r\n\r\n\r\n          \r\n          \r\n\r\n       </div>\r\n              \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}